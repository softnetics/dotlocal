// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: proto/dot-local.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DotLocalClient is the client API for DotLocal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DotLocalClient interface {
	CreateMappingWhileConnected(ctx context.Context, opts ...grpc.CallOption) (DotLocal_CreateMappingWhileConnectedClient, error)
}

type dotLocalClient struct {
	cc grpc.ClientConnInterface
}

func NewDotLocalClient(cc grpc.ClientConnInterface) DotLocalClient {
	return &dotLocalClient{cc}
}

func (c *dotLocalClient) CreateMappingWhileConnected(ctx context.Context, opts ...grpc.CallOption) (DotLocal_CreateMappingWhileConnectedClient, error) {
	stream, err := c.cc.NewStream(ctx, &DotLocal_ServiceDesc.Streams[0], "/DotLocal/CreateMappingWhileConnected", opts...)
	if err != nil {
		return nil, err
	}
	x := &dotLocalCreateMappingWhileConnectedClient{stream}
	return x, nil
}

type DotLocal_CreateMappingWhileConnectedClient interface {
	Send(*CreateMappingRequest) error
	CloseAndRecv() (*emptypb.Empty, error)
	grpc.ClientStream
}

type dotLocalCreateMappingWhileConnectedClient struct {
	grpc.ClientStream
}

func (x *dotLocalCreateMappingWhileConnectedClient) Send(m *CreateMappingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dotLocalCreateMappingWhileConnectedClient) CloseAndRecv() (*emptypb.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(emptypb.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DotLocalServer is the server API for DotLocal service.
// All implementations must embed UnimplementedDotLocalServer
// for forward compatibility
type DotLocalServer interface {
	CreateMappingWhileConnected(DotLocal_CreateMappingWhileConnectedServer) error
	mustEmbedUnimplementedDotLocalServer()
}

// UnimplementedDotLocalServer must be embedded to have forward compatible implementations.
type UnimplementedDotLocalServer struct {
}

func (UnimplementedDotLocalServer) CreateMappingWhileConnected(DotLocal_CreateMappingWhileConnectedServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateMappingWhileConnected not implemented")
}
func (UnimplementedDotLocalServer) mustEmbedUnimplementedDotLocalServer() {}

// UnsafeDotLocalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DotLocalServer will
// result in compilation errors.
type UnsafeDotLocalServer interface {
	mustEmbedUnimplementedDotLocalServer()
}

func RegisterDotLocalServer(s grpc.ServiceRegistrar, srv DotLocalServer) {
	s.RegisterService(&DotLocal_ServiceDesc, srv)
}

func _DotLocal_CreateMappingWhileConnected_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DotLocalServer).CreateMappingWhileConnected(&dotLocalCreateMappingWhileConnectedServer{stream})
}

type DotLocal_CreateMappingWhileConnectedServer interface {
	SendAndClose(*emptypb.Empty) error
	Recv() (*CreateMappingRequest, error)
	grpc.ServerStream
}

type dotLocalCreateMappingWhileConnectedServer struct {
	grpc.ServerStream
}

func (x *dotLocalCreateMappingWhileConnectedServer) SendAndClose(m *emptypb.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dotLocalCreateMappingWhileConnectedServer) Recv() (*CreateMappingRequest, error) {
	m := new(CreateMappingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DotLocal_ServiceDesc is the grpc.ServiceDesc for DotLocal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DotLocal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "DotLocal",
	HandlerType: (*DotLocalServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateMappingWhileConnected",
			Handler:       _DotLocal_CreateMappingWhileConnected_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/dot-local.proto",
}
